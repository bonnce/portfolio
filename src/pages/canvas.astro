---
  
---

<canvas id="cloud-container"></canvas>

<script >
  const {innerHeight, innerWidth} = window
  const canvas = document.getElementById("cloud-container") as HTMLCanvasElement
  const ctx = canvas?.getContext('2d')
  canvas.height = innerHeight
  canvas.width = innerWidth
  // const rect = [
  //       -20,
  //       20,
  //       100,
  //       50,
  //       // fill: 'green',
  //       // stroke: 'black',
  //       // strokeWidth: 4,
  //     ]

  class Cloud {
    weight:number
    xInit:number
    yInit:number
    x:number
    y:number
    width:number
    height:number
    color:string
    constructor(x:number, y:number, height:number, width:number, weight:number, color:string){
      this.xInit = x
      this.yInit = y
      this.x = x
      this.y = y
      this.height = height
      this.width = width
      this.color = color
      this.weight = weight
    }

    draw(ctx: CanvasRenderingContext2D){
      ctx.fillStyle = this.color
      ctx.fillRect(this.x,this.y, this.width, this.height)
    }

    update(ctx: CanvasRenderingContext2D, x?:number, y?:number){
      this.draw(ctx)
      if(x) this.x = x
      if(y) this.y = y
    }
  }

  
  // const anim = new Konva.Animation(function (frame) {
  //   if(frame){
      
  //     const rate = ((frame.time  * Math.PI) / period) * vel      
  //     const distance = stage.width()+100
  //     const restart = Math.floor(rate / distance)
  //     const move = rate - (distance * restart)
  //     if(restart > aux){
  //       rect.y(Math.random() * stage.height())
  //       aux = restart
  //     }
  //     rect.x(move - 100);
  //   }
  // }, layer);
  const vel = 150;
  const period = 2000;
  let aux = 0
  let lastTime = 0
  const fps = 165
  const frameDur = period/ fps
  

  const clouds = Array(10).fill(0).map(i => {
      return new Cloud(Math.random() * canvas.width, Math.random() * canvas.height, 40, 100, Math.random(), 'green')
    })

  function animate(time: number){
    let elapsedTime = time - lastTime;
    if (elapsedTime > frameDur) {
      ctx?.clearRect(0, 0, canvas.width, canvas.height);
      
      // Draw
      if(ctx){
        clouds.forEach(c => {
          const rate = (time * c.weight * Math.PI / period) * vel + c.xInit
          const distance = canvas.width + 100 
          const restart = Math.floor(rate / distance)
          const move = rate - (distance * restart)
          if(restart > aux){
            c.update(ctx, undefined, Math.random() * canvas.height)
            aux = restart
          }
          c.update(ctx, move - 100);
        })
      }

      lastTime = time;
    }
    requestAnimationFrame(animate)
  }

  requestAnimationFrame(animate)
</script>